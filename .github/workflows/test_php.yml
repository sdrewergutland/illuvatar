name: Test php

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

permissions:
    contents: read

jobs:
    test-static:
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v3
                
            -   name: Validate composer.json and composer.lock
                run: composer validate --strict
                
            -   name: Cache Composer vendor files
                uses: actions/cache@v3
                with:
                    path: './vendor'
                    key: ${{ runner.os }}-${{ hashFiles('./composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php

            -   name: Install dependencies
                uses: php-actions/composer@v6
                with:
                    version: 2
                    php_version: 8.2
                    progress: yes

            -   name: Start stack
                run: |
                    docker-compose --env-file .docker.env -f docker-compose.ci.yaml up -d
                    
            -   name: Clear cache for container generation
                run: |
                    docker exec -w /var/www/html --env-file .docker.env ${{ vars.DOCKER_PHP_CONTAINER_NAME }} ./bin/console cache:clear --env=test

            -   name: Cache PHPStan cache
                uses: actions/cache@v3
                with:
                    path: '.dev/tools/phpstan/.phpstan-cache'
                    key: ${{ runner.os }}-${{ hashFiles('./composer.lock') }}-${{ env.branchName }}
                    
            -   name: Run PHPStan
                run: |
                    docker exec -w /var/www/html --env-file .docker.env ${{ vars.DOCKER_PHP_CONTAINER_NAME }} ./vendor/bin/phpstan analyse -c phpstan.neon src tests
                    docker exec -w /var/www/html --env-file .docker.env ${{ vars.DOCKER_PHP_CONTAINER_NAME }} ./vendor/bin/psalm
                    docker exec -w /var/www/html --env-file .docker.env ${{ vars.DOCKER_PHP_CONTAINER_NAME }} ./vendor/bin/phpmd src github phpmd-ruleset.xml
                    
    test-static-cs-fixer:
        if: ${{ false }}  # disable for now
        runs-on: ubuntu-latest
        
        steps:
            -   uses: actions/checkout@v3

            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v3
                with:
                    path: './.dev/tools/php-cs-fixer/vendor'
                    key: ${{ runner.os }}-php-${{ hashFiles('./.dev/tools/php-cs-fixer/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-tools-php-cs-fixer

            -   name: Install dependencies
                uses: php-actions/composer@v6
                with:
                    version: 2
                    php_version: 8.2
                    php_extensions: bz2 exif gd mysqli zip opcache intl
                    progress: yes
                    working_dir: './.dev/tools/php-cs-fixer/'

            -   name: Run php-cs-fixer
                run: ./.dev/tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --path-mode=override --config=php-cs-fixer.php --dry-run
